@page "/"
@using Models
@using DBL
@inject ShoppingCart shoppingCart
@inject IJSRuntime js

<div class="m-2">
    <span class="h1">Top products in this store</span>

    @if (ProductList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table w-100">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Product Image</th>
                    <th>Product Price</th>
                    <th> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (Product item in ProductList)
                {
                    <tr>
                        <td>@item.ProductName</td>
                        <td><img src="data:image/@item.ProductIMGtype;base64, @System.Convert.ToBase64String((byte[])@item.ProductIMG)" width="200" /></td>
                        <td>@item.ProductPrice</td>
                        <td>
                            <a class="btn btn-success" href="ShowProduct/@item.ProductID.ToString()">Buy this product</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div class="m-2">
    <span class="h3">Best-selling products</span>

    @if (ProductPresentationList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table w-100">
            <thead>
                <tr>
                    <th>Name</th>
                    <th class="w-25">Quantity sold</th>
                    <th> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (ProductPresentation item in ProductPresentationList)
                {
                    <tr>
                        <td>@item.ProductType : @item.ProductName</td>
                        <td>@item.QuantitySold.ToString()</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    List<Product> ProductList;
    List<ProductPresentation> ProductPresentationList;
    protected override async Task OnInitializedAsync()
    {
        GenericDB genericDB = new GenericDB();
        ProductPresentationList = await genericDB.GetBestProductList();
        ProductDB productDB = new ProductDB();
        ProductList = (List<Product>)await productDB.GetBestProductAsync(3);
        
    }
}
